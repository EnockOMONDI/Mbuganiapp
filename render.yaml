services:
  # Web service for Mbugani Luxe Adventures
  - type: web
    name: Mbuganiapp
    env: python
    region: oregon
    plan: starter
    branch: mbugani7
    buildCommand: |
      echo "üöÄ Starting Mbugani Luxe Adventures build process..."
      pip install --upgrade pip
      pip install -r requirements.txt
      echo "üì¶ Dependencies installed successfully"
      python manage.py collectstatic --noinput --settings=tours_travels.settings_prod
      echo "üìÅ Static files collected"
      python manage.py migrate --settings=tours_travels.settings_prod
      echo "üóÑÔ∏è Database migrations applied"
      python manage.py createcachetable --settings=tours_travels.settings_prod
      echo "üíæ Cache table created"
      echo "‚úÖ Build completed successfully"
    startCommand: |
      echo "üåü Starting Mbugani Luxe Adventures web server..."
      gunicorn tours_travels.wsgi:application \
        --bind 0.0.0.0:$PORT \
        --workers $WEB_CONCURRENCY \
        --timeout $GUNICORN_TIMEOUT \
        --worker-class sync \
        --worker-connections 1000 \
        --max-requests 1000 \
        --max-requests-jitter 100 \
        --preload \
        --access-logfile - \
        --error-logfile - \
        --log-level info
    envVars:
      # Django Core Configuration
      - key: DJANGO_SETTINGS_MODULE
        value: tours_travels.settings_prod
      # NOTE: DJANGO_ENV removed to match Novustell's simple architecture
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: False
      - key: ALLOWED_HOSTS
        value: mbuganiapp.onrender.com,mbuganiluxeadventures.com,www.mbuganiluxeadventures.com

      # Database Configuration - Supabase PostgreSQL
      - key: DATABASE_URL
        value: postgresql://postgres.zgwfxeemdgfryiulbapx:JDuH37tYEfVuPpX!@aws-1-eu-west-1.pooler.supabase.com:6543/postgres
      - key: DB_CONN_MAX_AGE
        value: 600
      - key: DB_CONN_HEALTH_CHECKS
        value: True

      # Server Configuration
      - key: PORT
        generateValue: true
      - key: WEB_CONCURRENCY
        value: 3
      - key: GUNICORN_WORKERS
        value: 3
      - key: GUNICORN_TIMEOUT
        value: 240
      - key: RENDER_EXTERNAL_HOSTNAME
        generateValue: true

      # Email Configuration (Matches Novustell's working config)
      # Port 587 with TLS is hardcoded in settings_prod.py
      - key: EMAIL_HOST_USER
        value: novustellke@gmail.com
      - key: EMAIL_HOST_PASSWORD
        value: vsmw vdut tanu gtdg
      - key: DEFAULT_FROM_EMAIL
        value: Mbugani Luxe Adventures <novustellke@gmail.com>
      - key: ADMIN_EMAIL
        value: info@mbuganiluxeadventures.com
      - key: JOBS_EMAIL
        value: careers@mbuganiluxeadventures.com
      - key: NEWSLETTER_EMAIL
        value: news@mbuganiluxeadventures.com

      # Uploadcare Configuration
      - key: UPLOADCARE_PUBLIC_KEY
        sync: false  # Set manually in Render dashboard
      - key: UPLOADCARE_SECRET_KEY
        sync: false  # Set manually in Render dashboard

      # Site Configuration
      - key: SITE_URL
        value: https://www.mbuganiluxeadventures.com
      - key: WHATSAPP_PHONE
        value: +254701363551

      # Security Configuration
      - key: SECURE_SSL_REDIRECT
        value: True
      - key: SECURE_HSTS_SECONDS
        value: 31536000
      - key: SECURE_HSTS_INCLUDE_SUBDOMAINS
        value: True
      - key: SECURE_HSTS_PRELOAD
        value: True
      - key: SESSION_COOKIE_SECURE
        value: True
      - key: CSRF_COOKIE_SECURE
        value: True
      - key: SESSION_COOKIE_HTTPONLY
        value: True
      - key: CSRF_COOKIE_HTTPONLY
        value: True

      # Performance Configuration
      - key: FILE_UPLOAD_MAX_MEMORY_SIZE
        value: 5242880
      - key: DATA_UPLOAD_MAX_MEMORY_SIZE
        value: 5242880
      - key: SESSION_COOKIE_AGE
        value: 86400

      # Feature Flags
      - key: ENABLE_BOOKING_NOTIFICATIONS
        value: True
      - key: ENABLE_EMAIL_MARKETING
        value: True
      - key: ENABLE_ANALYTICS
        value: True
      - key: ENABLE_CHAT_SUPPORT
        value: False

      # Business Configuration
      - key: DEFAULT_BOOKING_EXPIRY_HOURS
        value: 24
      - key: MAX_BOOKING_ADULTS
        value: 20
      - key: MAX_BOOKING_CHILDREN
        value: 15
      - key: MAX_BOOKING_ROOMS
        value: 10

      # Regional Settings
      - key: TIME_ZONE
        value: Africa/Nairobi
      - key: DEFAULT_LANGUAGE
        value: en
      - key: DEFAULT_COUNTRY
        value: Kenya
      - key: DEFAULT_CURRENCY
        value: USD

      # Monitoring (Optional - set manually if needed)
      # - key: SENTRY_DSN
      #   sync: false
      # - key: GOOGLE_ANALYTICS_ID
      #   sync: false

    healthCheckPath: /health/
    autoDeploy: true
    disk:
      name: novustell-disk
      mountPath: /opt/render/project/src/media
      sizeGB: 1


# External Database Configuration
# Using Supabase PostgreSQL database (configured via DATABASE_URL environment variable)
# No database creation needed as we're using external Supabase service

# databases:
#   # Previous NeonDB PostgreSQL database (now using Supabase)
#   - name: novustell-db
#     databaseName: novustell_travel
#     user: novustell_user
#     region: oregon
#     plan: free
#     postgresMajorVersion: 15
#     ipAllowList: []  # Allow all IPs (can be restricted later)

# Redis cache (optional - for improved performance)
# - name: novustell-redis
#   type: redis
#   region: oregon
#   plan: free
#   maxmemoryPolicy: allkeys-lru

# Static files and media configuration
# Note: Render serves static files automatically
# For production media files, consider AWS S3 integration

# Environment-specific notes:
# 1. EMAIL_HOST_PASSWORD is now automatically set via render.yaml: grdg fofh myne wdpf
# 2. Set UPLOADCARE_PUBLIC_KEY and UPLOADCARE_SECRET_KEY manually
# 3. Optional: Set SENTRY_DSN for error monitoring
# 4. Optional: Set GOOGLE_ANALYTICS_ID for analytics
# 5. Consider upgrading to paid plans for production workloads

# Deployment checklist:
# ‚úÖ Environment variables configured
# ‚úÖ Database connection established
# ‚úÖ Static files collection enabled
# ‚úÖ Health checks configured
# ‚úÖ Auto-deployment enabled
# ‚úÖ Security headers configured
# ‚úÖ Performance optimizations applied

